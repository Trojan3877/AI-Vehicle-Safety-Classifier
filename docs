docs/
├── architecture.md      # Overview of components (Classifier, Data Flow, etc.)
├── classifier_workflow.png  # Visual diagram of end-to-end pipeline
└── performance.md       # Description of evaluation metrics (Precision/Recall/F1, ROC curve)


# System Architecture

This project implements an AI-driven vehicle safety classification pipeline:

1. **Data Ingestion**  
   - Raw images of vehicles → `data/raw_images/`

2. **Preprocessing (C++)**  
   - `src/preprocess.cpp` loads images, resizes, normalizes, and outputs standardized feature vectors.

3. **Model Inference (C++)**  
   - `src/classifier.cpp` loads a pre-trained binary model (e.g., ONNX or custom format) and outputs a “safety score” between 0–1.

4. **Python Mirror & Visualization**  
   - `predict.py` wraps the C++ binary, runs batch predictions, and generates a classification report using sklearn metrics.
   - `results/` folder stores `roc_curve.png`, `confusion_matrix.png`, and “safety_score_distribution.png.”

5. **Deployment**  
   - Docker container defined in `Dockerfile`, orchestrated by `docker-compose.yml` (optionally runs a Flask/Streamlit dashboard).
